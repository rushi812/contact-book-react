{"version":3,"sources":["Navbar/Navbar.js","firebase/firebase.js","redux/contactActions.js","redux/actionTypes.js","Navbar/NavbarContainer.js","modules/Home/Home.js","modules/Home/HomeContainer.js","modules/Dashboard/components/ContactList/ContactInfo/ContactInfo.js","modules/Dashboard/components/ContactList/ContactInfo/ContactInfoContainer.js","modules/Dashboard/components/ContactList/ContactList.js","modules/Dashboard/components/ContactList/ContactListContainer.js","modules/Dashboard/Dashboard.js","modules/Dashboard/DashboardContainer.js","modules/ContactPage/components/AddContact/AddContact.js","modules/ContactPage/components/AddContact/AddContactContainer.js","modules/Login/Login.js","modules/Login/LoginContainer.js","modules/Signup/Signup.js","modules/Signup/SignupContainer.js","Routes.js","redux/contactReducers.js","redux/authReducer.js","rootReducer.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","fontSize","title","linkStyle","color","textDecoration","button","padding","borderRadius","Navbar","isLoggedIn","logoutButtonHandler","classes","Paper","AppBar","position","className","appBar","Toolbar","Typography","variant","noWrap","to","Button","onClick","Fragment","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","db","addContact","contact","dispatch","collection","add","then","type","catch","err","console","log","getListItemData","id","doc","get","data","exists","payload","UpdateContact","isEdit","authUser","NavbarContainer","props","history","push","localStorage","removeItem","this","Component","connect","state","auth","bindActionCreators","withRouter","textStyle","textTransform","Home","user","component","firstname","lastname","HomeContainer","setState","JSON","parse","getItem","card","minWidth","border","borderBottom","ContactInfo","contacts","editbuttonHandler","Card","CardContent","gutterBottom","address","email","phone","CardActions","Fab","aria-label","event","useHistory","preventDefault","block","display","paper","marginTop","flexDirection","backgroundColor","palette","background","purple","deepPurple","icon","ContactList","infoButtonHandler","removeButtonHandler","contactList","Container","maxWidth","CssBaseline","map","List","key","ListItem","alignItems","ListItemAvatar","Avatar","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","Divider","ContactListContainer","open","setOpen","handleClickOpen","handleClose","delete","filter","querySnapshot","forEach","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogActions","layout","width","marginLeft","breakpoints","up","marginBottom","Dashboard","align","DashboardContainer","buttons","justifyContent","AddContact","addContactInputHandler","addContactButtonHandler","updateContactButtonHandler","Grid","container","item","xs","sm","TextField","value","onChange","required","name","label","fullWidth","autoComplete","AddContactContainer","target","update","avatar","margin","main","form","submit","Login","loginInputHandler","loginButtonHandler","validate","noValidate","textField","autoFocus","LoginContainer","username","password","query","where","setItem","stringify","Signup","signupInputHandler","signupButtonHandler","justify","Link","href","SignupContainer","Routes","path","exact","ContactInfoContainer","initialState","contactReducer","action","authReducer","rootReducer","combineReducers","store","createStore","compose","composeWithDevTools","applyMiddleware","thunk","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7bd5df84.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(7),\n        fontSize: '2rem',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    linkStyle: {\n        color: '#fff',\n        textDecoration: 'none',\n        marginRight: theme.spacing(3),\n    },\n    button: {\n        color: '#fff',\n        textDecoration: 'none',\n        // backgroundColor: '#7d8eee',\n        padding: theme.spacing(1),\n        borderRadius: '5px',\n    },\n}));\n\nfunction Navbar({ isLoggedIn, logoutButtonHandler }) {\n    const classes = useStyles();\n\n\n    return (\n        <div>\n            <Paper >\n                <AppBar position=\"static\" className={classes.appBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.menuButton}>\n                            <Link to=\"/\" className={classes.linkStyle}>CONTACT BOOK</Link>\n                        </Typography>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            <Link to=\"/dashboard\" className={classes.linkStyle}>Dashboard</Link>\n                            <Link to=\"/add-contact\" className={classes.linkStyle}>Add Contact</Link>\n                        </Typography>\n                        {\n                            isLoggedIn ?\n                                <Button color=\"inherit\" onClick={logoutButtonHandler}>\n                                    <ExitToAppIcon />&nbsp;\n                                    Logout\n                                </Button> :\n                                <React.Fragment>\n                                    <Button color=\"inherit\">\n                                        <PersonIcon />\n                                        <Link to=\"/login\" className={classes.button}>\n                                            Sign In\n                                        </Link>\n                                    </Button>\n                                    <Button color=\"inherit\" variant=\"outlined\">\n                                        <PersonAddIcon />\n                                        <Link to=\"/signup\" className={classes.button}>\n                                            sign Up\n                                        </Link>\n                                    </Button>\n                                </React.Fragment>\n                        }\n                    </Toolbar>\n                </AppBar>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Navbar;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDJ03h_wd7PaagxCWRIraQGjqdJf8K2Zk4\",\n  authDomain: \"contact-book-f539a.firebaseapp.com\",\n  databaseURL: \"https://contact-book-f539a.firebaseio.com\",\n  projectId: \"contact-book-f539a\",\n  storageBucket: \"contact-book-f539a.appspot.com\",\n  messagingSenderId: \"142745563860\",\n  appId: \"1:142745563860:web:eb511dbf20ba9c63cbc141\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase;","import * as actionTypes from './actionTypes';\nimport firebase from '../firebase/firebase';\n\nconst db = firebase.firestore();\nexport const addContact = (contact) => {\n\n  return (dispatch) => {\n    db.collection('contacts').add(contact)\n      .then(() => {\n        dispatch({\n          type: actionTypes.ADD_CONTACT,\n          contact,\n        });\n      }).catch(err =>\n        console.log(\"Error adding contact\", err));\n  }\n}\n\nexport const getListItemData = (id) => {\n  return (dispatch) => {\n    db.collection('contacts').doc(id).get()\n      .then((data) => {\n        (data.exists) ?\n          dispatch({\n            type: actionTypes.GET_LIST_ITEM,\n            payload: {\n              id,\n              data: data.data()\n            }\n          }) :\n          console.log(\"No such document exists!\");\n\n      }).catch(err =>\n        console.log(\"Error fetching document from database\", err));\n  }\n}\n\nexport const UpdateContact = (isEdit) => {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.UPDATE_CONTACT,\n      isEdit,\n    });\n  }\n}\n\nexport const authUser = () => {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.IS_LOGGEDIN,\n    });\n  }\n}\n","export const ADD_CONTACT = 'ADD_CONTACT';\nexport const GET_LIST_ITEM = 'GET_LIST_ITEM';\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\nexport const IS_LOGGEDIN = 'IS_LOGGEDIN';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\n\nimport Navbar from './Navbar';\nimport { authUser } from '../redux/contactActions';\n\nclass NavbarContainer extends Component {\n\n    logoutButtonHandler = () => {\n        this.props.authUser();\n        this.props.isLoggedIn ?\n            this.props.history.push('/login') :\n            this.props.history.push('/')\n        localStorage.removeItem('loggedInUser');\n    }\n\n    render() {\n        return (\n            <Navbar\n                isLoggedIn={this.props.isLoggedIn}\n                logoutButtonHandler={this.logoutButtonHandler} />\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    authUser,\n}, dispatch);\n\nconst mapStateToProps = (state) => ({\n    isLoggedIn: state.auth.isLoggedIn\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps)(withRouter(NavbarContainer));","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n  textStyle: {\n    textTransform: 'uppercase',\n  }\n}));\n\n\nfunction Home({ user }) {\n  const classes = useStyles();\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Welcome\n      </Typography>\n        <Typography variant=\"h2\" component=\"h1\" color=\"textSecondary\" className={classes.textStyle}>\n          {user.firstname} {user.lastname}\n        </Typography>\n      </Paper>\n    </div >\n  );\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Home from './Home';\n\nclass HomeContainer extends Component {\n\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: JSON.parse(localStorage.getItem('loggedInUser'))\n    });\n  }\n\n  render() {\n    if (!this.props.isLoggedIn) return <Redirect to=\"/login\" />\n    return (\n      <Home user={this.state.user} />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.auth.isLoggedIn\n})\n\nexport default connect(mapStateToProps)(HomeContainer);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Fab from '@material-ui/core/Fab';\n\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n  },\n  title: {\n    fontSize: '1rem',\n  },\n  border: {\n    borderBottom: '1px solid #ebe5e5',\n    padding: '1rem 0'\n  }\n\n});\n\nconst ContactInfo = ({ contacts, editbuttonHandler }) => {\n\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <div className={classes.border}>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Name\n          </Typography>\n          <Typography variant=\"h3\" component=\"h2\" >\n            {contacts.firstname} {contacts.lastname}\n          </Typography>\n        </div>\n        <div className={classes.border}>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Address\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" >\n            {contacts.address}\n          </Typography>\n        </div>\n        <div className={classes.border}>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Email\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" >\n            {contacts.email}\n          </Typography>\n        </div>\n        <div className={classes.border}>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            Phone\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" >\n            {contacts.phone}\n          </Typography>\n        </div>\n        <CardActions>\n          <Fab color=\"secondary\" aria-label=\"edit\" onClick={(event) => editbuttonHandler(event, contacts.id)}>\n            <EditIcon />\n          </Fab>\n        </CardActions>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ContactInfo;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter, useHistory } from 'react-router-dom';\n\n// import firebase from '../../../../../firebase/firebase';\nimport ContactInfo from './ContactInfo';\nimport { UpdateContact } from '../../../../../redux/contactActions';\n\nconst ContactInfoContainer = ({ contacts, isEdit, UpdateContact }) => {\n  // const db = firebase.firestore();\n  const history = useHistory();\n\n  const editbuttonHandler = (event, id) => {\n    event.preventDefault();\n    UpdateContact(isEdit);\n    history.push('/add-contact');\n  }\n\n  return (\n    <ContactInfo\n      contacts={contacts}\n      editbuttonHandler={editbuttonHandler} />\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contact.contacts,\n  isEdit: state.contact.isEdit,\n})\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  UpdateContact,\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ContactInfoContainer));","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar';\nimport { deepPurple } from '@material-ui/core/colors';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Container from '@material-ui/core/Container';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\n\n\n\nconst useStyles = makeStyles(theme => ({\n\n  block: {\n    display: 'block',\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    textTransform: \"uppercase\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  purple: {\n    color: '#fff',\n    backgroundColor: deepPurple[500],\n    padding: '1.5rem',\n    marginRight: '1.3rem',\n  },\n  icon: {\n    marginTop: '10px',\n  }\n}));\n\nfunction ContactList({ infoButtonHandler, removeButtonHandler, contactList }) {\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xl\" >\n      <CssBaseline />\n      <div className={classes.paper}>\n\n        {\n          contactList &&\n          contactList.map((contact) => {\n            return (\n              <List key={contact.id}>\n                <ListItem alignItems=\"flex-start\">\n                  <ListItemAvatar>\n                    <Avatar className={classes.purple}>\n                      <PermContactCalendarIcon fontSize=\"large\" />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={\n                      <Typography\n                        component=\"span\"\n                        variant=\"h4\"\n                        color=\"textPrimary\"\n                      >\n                        {contact.firstname}\n                      </Typography>\n                    }\n                    secondary={\n                      <Typography\n                        component=\"p\"\n                        variant=\"body2\"\n                        className={classes.block}\n                        color=\"textSecondary\"\n                      >\n                        <PhoneIphoneIcon className={classes.icon} />{contact.phone}\n                      </Typography>\n                    }\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={(event) => infoButtonHandler(event, contact.id)} >\n                      <UnfoldMoreIcon />\n                    </IconButton>\n                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={(event) => removeButtonHandler(event, contact.id)} >\n                      <DeleteIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n                <Divider variant=\"inset\" component=\"li\" />\n              </List>\n            )\n          })\n        }\n      </div>\n    </Container>\n\n\n  );\n}\n\nexport default ContactList;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport ContactList from './ContactList';\nimport ContactInfoContainer from './ContactInfo/ContactInfoContainer';\nimport firebase from '../../../../firebase/firebase';\nimport { getListItemData } from '../../../../redux/contactActions';\n\n\nconst db = firebase.firestore();\n\nclass ContactListContainer extends Component {\n\n  state = {\n    contacts: [],\n    open: false,\n    setOpen: false,\n  }\n\n  handleClickOpen = () => {\n    console.log(\"dialogue open button\");\n    this.setState({\n      open: true,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  // FETCHING DATA FROM DATABASE\n  componentDidMount() {\n    db.collection('contacts').get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        this.setState({\n          contacts: [\n            ...this.state.contacts,\n            {\n              ...doc.data(),\n              id: doc.id,\n            }\n          ]\n        });\n      });\n    }).catch(err =>\n      console.log(\"Error while fetching collection from database\", err));\n  }\n\n  // REMOVE DATA ITEM\n  removeButtonHandler = (event, id) => {\n    db.collection('contacts').doc(id).delete().then(() => {\n      this.setState({\n        contacts: this.state.contacts.filter(contact => {\n          return id !== contact.id;\n        })\n      });\n    }).catch(err =>\n      console.log(\"Error deleting the document\", err));\n  };\n\n  // DETAILS OF DATA ITEM\n  infoButtonHandler = (event, id) => {\n    this.props.getListItemData(id);\n    // this.props.history.push('/contact-info');\n    this.handleClickOpen();\n  }\n\n  render() {\n    return (\n      <div>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Contact Info\"}</DialogTitle>\n          <DialogContent>\n            <ContactInfoContainer />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Close\n          </Button>\n          </DialogActions>\n        </Dialog>\n        <ContactList\n          removeButtonHandler={this.removeButtonHandler}\n          infoButtonHandler={this.infoButtonHandler}\n          contactList={this.state.contacts} />\n      </div>\n    );\n  }\n}\n\nconst matchStateToProps = (state) => ({\n  contacts: state.contact.contacts\n});\n\nconst matchDispatchToProps = (dispatch) => bindActionCreators({\n  getListItemData,\n}, dispatch);\n\nexport default connect(\n  matchStateToProps,\n  matchDispatchToProps)(withRouter(ContactListContainer));","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport ContactListContainer from '../Dashboard/components/ContactList/ContactListContainer';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n}));\n\nconst Dashboard = () => {\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Contact List\n          </Typography>\n          <ContactListContainer />\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Dashboard from './Dashboard';\n\nclass DashboardContainer extends Component {\n\n\n\n  render() {\n    if (!this.props.isLoggedIn) return <Redirect to=\"/login\" />\n\n    return (\n      <Dashboard />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.auth.isLoggedIn,\n})\n\nexport default connect(mapStateToProps)(DashboardContainer);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction AddContact({\n  addContactInputHandler,\n  addContactButtonHandler,\n  updateContactButtonHandler,\n  contacts,\n  isEdit }) {\n\n  const classes = useStyles();\n\n  console.log(\"is edit\", isEdit);\n  return (\n    < React.Fragment >\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Contact\n          </Typography>\n          <React.Fragment>\n            {\n              isEdit ?\n                <Typography variant=\"h6\" gutterBottom>Edit your contact details</Typography> :\n                <Typography variant=\"h6\" gutterBottom>Add your contact details</Typography>\n            }\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  type=\"text\"\n                  value={contacts.firstname}\n                  onChange={addContactInputHandler}\n                  required\n                  id=\"firstname\"\n                  name=\"firstname\"\n                  label=\"First Name\"\n                  fullWidth\n                  autoComplete=\"fname\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  value={contacts.lastname}\n                  onChange={addContactInputHandler}\n                  id=\"lastname\"\n                  name=\"lastname\"\n                  label=\"Last Name\"\n                  fullWidth\n                  autoComplete=\"lname\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  value={contacts.email}\n                  onChange={addContactInputHandler}\n                  id=\"email\"\n                  name=\"email\"\n                  label=\"Email\"\n                  fullWidth\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  value={contacts.phone}\n                  onChange={addContactInputHandler}\n                  required\n                  id=\"phone\"\n                  name=\"phone\"\n                  label=\"Phone\"\n                  fullWidth\n                  autoComplete=\"phone\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  value={contacts.address}\n                  onChange={addContactInputHandler}\n                  id=\"address\"\n                  name=\"address\"\n                  label=\"Address\"\n                  fullWidth\n                  autoComplete=\"address\"\n                />\n              </Grid>\n            </Grid>\n            <div className={classes.buttons}>\n              {\n                isEdit ?\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={updateContactButtonHandler}\n                    className={classes.button}\n                  >Update\n                  </Button> :\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={addContactButtonHandler}\n                    className={classes.button}\n                  >Add\n                  </Button>\n              }\n            </div>\n          </React.Fragment>\n        </Paper>\n      </main>\n    </React.Fragment >\n  );\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport AddContact from './AddContact';\nimport { addContact } from '../../../../redux/contactActions';\nimport firebase from '../../../../firebase/firebase';\n\nconst db = firebase.firestore();\n\nclass AddContactContainer extends Component {\n\n  state = {\n    firstname: '',\n    lastname: '',\n    email: '',\n    phone: '',\n    address: '',\n  }\n\n  componentDidMount() {\n    const { id, firstname, lastname, email, phone, address } = this.props.contacts;\n    if (this.props.isEdit) {\n      this.setState({\n        id,\n        firstname,\n        lastname,\n        email,\n        phone,\n        address,\n      });\n    }\n  }\n\n  addContactInputHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n  addContactButtonHandler = (event) => {\n    event.preventDefault();\n    this.props.addContact(this.state);\n    this.setState({\n      [event.target.name]: '',\n    });\n    this.props.history.push('/dashboard');\n  }\n\n  updateContactButtonHandler = (event) => {\n    const { firstname, lastname, email, phone, address } = this.state;\n    event.preventDefault();\n    this.props.addContact(this.state);\n    db.collection('contacts').doc(this.state.id).update({\n      firstname,\n      lastname,\n      email,\n      phone,\n      address,\n    });\n    this.setState({\n      [event.target.name]: '',\n    });\n    this.props.history.push('/dashboard');\n  }\n\n  render() {\n    if (!this.props.isLoggedIn) return <Redirect to=\"/login\" />\n    return (\n      <AddContact\n        addContactInputHandler={this.addContactInputHandler}\n        addContactButtonHandler={this.addContactButtonHandler}\n        updateContactButtonHandler={this.updateContactButtonHandler}\n        contacts={this.state}\n        isEdit={this.props.isEdit} />\n    );\n  }\n}\n\nconst matchStateToProps = (state) => ({\n  contacts: state.contact.contacts,\n  isEdit: state.contact.isEdit,\n  isLoggedIn: state.auth.isLoggedIn,\n});\n\nconst matchDispatchToProps = (dispatch) => bindActionCreators({\n  addContact,\n}, dispatch);\n\nexport default connect(\n  matchStateToProps,\n  matchDispatchToProps)(withRouter(AddContactContainer));","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login({ loginInputHandler, loginButtonHandler, validate }) {\n  // console.log(\"validation\", validate);\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate autoComplete=\"off\">\n          <div>\n            <TextField\n              className={classes.textField}\n              onChange={loginInputHandler}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Email / Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n            />\n\n          </div>\n          <div>\n            <TextField\n              className={classes.textField}\n              onChange={loginInputHandler}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n          </div>\n          <div>\n            <Button\n              type=\"submit\"\n              onClick={loginButtonHandler}\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >Sign In\n          </Button>\n          </div>\n\n        </form>\n      </div >\n    </Container>\n  );\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\n\nimport firebase from '../../firebase/firebase';\nimport { authUser } from '../../redux/contactActions';\n\n\nimport Login from './Login';\n\nconst db = firebase.firestore();\nclass LoginContainer extends Component {\n\n  state = {\n    username: '',\n    password: '',\n  }\n\n  loginInputHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginButtonHandler = (event) => {\n    event.preventDefault();\n    let query = db.collection('users');\n    query = query.where('username', '==', this.state.username)\n    query.where('password', '==', this.state.password)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          localStorage.setItem('loggedInUser', JSON.stringify(doc.data()));\n          this.props.authUser();\n          this.props.history.push('/');\n        });\n      })\n      .catch(err => (\n        console.log(\"username password doesn't match!\", err)\n      ));\n  }\n\n\n  render() {\n    return (\n      <Login\n        loginInputHandler={this.loginInputHandler}\n        loginButtonHandler={this.loginButtonHandler}\n        isLoggedIn={this.props.isLoggedIn}\n      />\n    );\n  }\n}\n\nconst matchStateToProps = (state) => ({\n  isLoggedIn: state.auth.isLoggedIn,\n});\n\nconst matchDispatchToProps = (dispatch) => bindActionCreators({\n  authUser,\n}, dispatch);\n\nexport default connect(\n  matchStateToProps,\n  matchDispatchToProps)(withRouter(LoginContainer));","import React from 'react';\n\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nfunction Signup({ signupInputHandler, signupButtonHandler }) {\n\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <form className={classes.form} noValidate autoComplete=\"off\">\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"firstname\"\n                name=\"firstname\"\n                onChange={signupInputHandler}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstname\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                onChange={signupInputHandler}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastname\"\n                label=\"Last Name\"\n                name=\"lastname\"\n                autoComplete=\"lastname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                onChange={signupInputHandler}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username / Email\"\n                name=\"username\"\n                autoComplete=\"username\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                onChange={signupInputHandler}\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            onClick={signupButtonHandler}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div >\n    </Container>\n  );\n}\n\nexport default Signup;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\nimport firebase from '../../firebase/firebase';\nimport Signup from './Signup';\n\nconst db = firebase.firestore();\nclass SignupContainer extends Component {\n\n  state = {\n    firstname: '',\n    lastname: '',\n    username: '',\n    password: '',\n  }\n\n  signupInputHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n  signupButtonHandler = (event) => {\n    event.preventDefault();\n    db.collection('users').add(this.state)\n      .then(() => {\n        console.log(\"User\", this.state);\n      }).catch(err =>\n        console.log(\"Error while signing up\", err));\n    this.props.history.push('/login');\n  }\n  render() {\n    return (\n      <Signup signupInputHandler={this.signupInputHandler} signupButtonHandler={this.signupButtonHandler} />\n    );\n  }\n}\n\nconst matchStateToProps = (state) => ({\n});\n\nconst matchDispatchToProps = (dispatch) => bindActionCreators({\n}, dispatch);\n\n\n\nexport default connect(\n  matchStateToProps,\n  matchDispatchToProps)(withRouter(SignupContainer));","import React from 'react';\nimport {\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport HomeContainer from './modules/Home/HomeContainer';\nimport ContactInfoContainer from './modules/Dashboard/components/ContactList/ContactInfo/ContactInfoContainer';\nimport ContactListContainer from './modules/Dashboard/components/ContactList/ContactListContainer';\nimport DashboardContainer from './modules/Dashboard/DashboardContainer';\nimport AddContactContainer from './modules/ContactPage/components/AddContact/AddContactContainer';\nimport LoginContainer from './modules/Login/LoginContainer';\nimport SignupContainer from './modules/Signup/SignupContainer';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" component={HomeContainer} exact />\n      <Route path=\"/contact-info\" component={ContactInfoContainer} />\n      <Route path=\"/contact-list\" component={ContactListContainer} />\n      <Route path=\"/dashboard\" component={DashboardContainer} />\n      <Route path=\"/add-contact\" component={AddContactContainer} />\n      <Route path=\"/login\" component={LoginContainer} />\n      <Route path=\"/signup\" component={SignupContainer} />\n      <Route path=\"*\" component={LoginContainer} />\n    </Switch>\n  );\n}\n\nexport default Routes;","import * as actionTypes from './actionTypes';\n\nconst initialState = {\n  contacts: {},\n  isEdit: false,\n}\n\nconst contactReducer = (state = initialState, action) => {\n\n  const { type, contact, payload } = action;\n\n  switch (type) {\n    case actionTypes.ADD_CONTACT:\n      return {\n        // ...state,\n        contacts: contact,\n        isEdit: !state.isEdit,\n      }\n    case actionTypes.GET_LIST_ITEM:\n      return {\n        ...state,\n        contacts:\n        {\n          id: payload.id,\n          ...payload.data,\n        }\n      }\n    case actionTypes.UPDATE_CONTACT:\n      return {\n        ...state,\n        isEdit: !state.isEdit,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default contactReducer;","import * as actionTypes from './actionTypes';\n\n\nconst initialState = {\n  isLoggedIn: false,\n}\n\nconst authReducer = (state = initialState, action) => {\n\n  const { type } = action;\n\n  switch (type) {\n    case actionTypes.IS_LOGGEDIN:\n      return {\n        ...state,\n        isLoggedIn: !state.isLoggedIn,\n      }\n    default:\n      return state;\n  }\n\n}\n\nexport default authReducer;\n\n","import { combineReducers } from 'redux';\n\nimport contactReducer from './redux/contactReducers';\nimport authReducer from './redux/authReducer';\n\nconst rootReducer = combineReducers({\n  contact: contactReducer,\n  auth: authReducer\n})\n\n\nexport default rootReducer;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport NavbarContainer from './Navbar/NavbarContainer';\n\nimport './App.css';\nimport Routes from './Routes';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    composeWithDevTools(applyMiddleware(thunk)),\n  ),\n);\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n\n      <Router>\n        <NavbarContainer />\n        <div>\n          <Routes />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}